{"version":3,"sources":["../../../src/@ionic-native/plugins/wheel-selector/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AACxE,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAqD3C;;;;;;;;;;;;;;;GAeG;AASH,IAAa,aAAa;IAAS,iCAAiB;IAApD;;IAaA,CAAC;IAVC,4BAAI,GAAJ,UAAK,OAA6B;QAChC,MAAM,CAAC;IACT,CAAC;IAQH,oBAAC;AAAD,CAbA,AAaC,CAbkC,iBAAiB,GAanD;AANM,wBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AATA;IADC,OAAO,EAAE;;;;yCAGT;AALU,aAAa;IARzB,MAAM,CAAC;QACN,UAAU,EAAE,eAAe;QAC3B,MAAM,EAAE,+BAA+B;QACvC,SAAS,EAAE,uBAAuB;QAClC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,EAAE;KACd,CAAC;GAEW,aAAa,CAazB;SAbY,aAAa","file":"index.js","sourceRoot":"","sourcesContent":["import { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\nexport interface WheelSelectorOptions {\n  /**\n   * The title of the selector's input box\n   */\n  title: string;\n\n  /**\n   * The items to display (array of items).  \n   * Example, 2 wheels: \n   * [{description: \"1\", description: \"2\", description: \"3\"}, \n   * {description: \"Apple\", description: \"Pear\", description: \"Banana\"}]\n   */\n  items: {};\n\n  /**\n   * Which items to display by default, example [\"2\",\"Apple\"] (if items.length is 2 for instance)\n   */\n  defaultItems?: any;\n\n  /**\n   * The 'ok' button text\n   */\n  positiveButtonText?: string;\n\n  /**\n   * The 'cancel' button text\n   */\n  negativeButtonText?: string;\n\n  /**\n   * Android only - theme color, 'light' or 'dark'.\n   */\n  theme?: string;\n\n  /**\n   * Whether to have the wheels 'wrap' (Android only)\n   */\n  wrapWheelText?: boolean;\n\n  /**\n   * The json key to display, by default it is description, this allows for setting any\n   * key/value to be displayed\n   */\n  displayKey?: string;\n}\n\nexport interface WheelSelectorData {\n\n  data: any;\n\n}\n/**\n * @name WheelSelector Plugin\n * @description Native wheel selector for Cordova (Android/iOS).\n *\n * @usage\n * ```\n * import { WheelSelector } from 'ionic-native';\n *\n *\n * constructor(private selector: WheelSelector) { }\n *\n * ...\n *\n *\n * ```\n */\n@Plugin({\n  pluginName: 'WheelSelector',\n  plugin: 'cordova-wheel-selector-plugin',\n  pluginRef: 'SelectorCordovaPlugin',\n  repo: '',\n  platforms: []\n})\n\nexport class WheelSelector extends IonicNativePlugin {\n\n  @Cordova()\n  show(options: WheelSelectorOptions): Promise<WheelSelectorData> {\n    return;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}